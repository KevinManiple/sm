<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
">

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="#{T(java.lang.Integer).parseInt('${jdbc.initialSize}')}" />
		<property name="minIdle" value="#{T(java.lang.Integer).parseInt('${jdbc.minIdle}')}" />
		<property name="maxActive" value="#{T(java.lang.Integer).parseInt('${jdbc.maxActive}')}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="#{T(java.lang.Integer).parseInt('${jdbc.timeBetweenEvictionRunsMillis}')}" />
		<property name="minEvictableIdleTimeMillis" value="#{T(java.lang.Integer).parseInt('${jdbc.minEvictableIdleTimeMillis}')}" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="#{T(java.lang.Integer).parseInt('${jdbc.removeAbandonedTimeout}')}" />
		<property name="logAbandoned" value="true" />
		<property name="validationQuery" value="SELECT 1 from dual" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="#{T(java.lang.Integer).parseInt('${jdbc.maxPoolPreparedStatementPerConnectionSize}')}" />
		<property name="filters" value="stat,wall,config" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="wall-filter" />
			</list>
		</property>
		<property name="connectionProperties" value="config.decrypt=true" />
	</bean>

	<bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig" init-method="init">
		<property name="dir" value="META-INF/druid/wall/mysql" />
	</bean>

	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
		<property name="dbType" value="mysql" />
		<property name="config" ref="wall-filter-config" />
	</bean>

	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="30000" />
		<property name="logSlowSql" value="true" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:com/kevin/**/*Mapper.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.kevin.**.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />
			<tx:method name="delAndRepair" propagation="REQUIRED" />

			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />

			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.kevin.**.service.impl.*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>

</beans>